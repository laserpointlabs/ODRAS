# ODRAS Environment Configuration
# Copy this file to .env and customize for your environment

# Database Configuration
QDRANT_URL=http://localhost:6333
NEO4J_URL=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=testpassword
FUSEKI_URL=http://localhost:3030/odras

# LLM Configuration
LLM_PROVIDER=openai
LLM_MODEL=gpt-4o-mini
OPENAI_API_KEY=your-openai-api-key-here
OLLAMA_URL=http://localhost:11434

# # LLM Configuration
# LLM_PROVIDER=ollama
# LLM_MODEL=mistral:latest
# OLLAMA_URL=http://localhost:11434

# File Storage Configuration  
STORAGE_BACKEND=minio
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET_NAME=odras-files
MINIO_SECURE=false
LOCAL_STORAGE_PATH=./storage/files

# PostgreSQL Configuration
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DATABASE=odras
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password

# Application Configuration
COLLECTION_NAME=odras_requirements
CAMUNDA_BASE_URL=http://localhost:8080
API_BASE_URL=http://localhost:8000
ENVIRONMENT=development
LOG_LEVEL=INFO

# Start up
MICRO_KERNEL_CLEAR_ON_START=true
MICRO_KERNEL_AUTODEPLOY=true

# =============================================================================
# INSTALLATION CONFIGURATION
# =============================================================================
# These settings define the organizational context and namespace structure
# for this ODRAS installation. They are displayed in the admin interface
# and used for generating consistent URIs across the system.
#
# IMPORTANT: Update these values for your specific deployment environment!
# =============================================================================

# Organization/Department Name
# This appears in the admin header and identifies the deploying organization
# Examples: "US Navy", "US Air Force", "Lockheed Martin", "MIT Research Lab"
INSTALLATION_ORGANIZATION="US Navy XMA-ADT"

# Base URI for this installation
# This is the root URI used for generating all ontology namespaces
# CRITICAL: Change this for production deployments!
# Examples: "https://ontology.navy.mil/adt", "https://ontology.airforce.mil/systems"
INSTALLATION_BASE_URI="https://ontology.navy.mil"

# Installation Type/Classification
# Defines the type of organization or deployment context
# Options: navy, airforce, army, industry, research, development, test
INSTALLATION_TYPE="navy"

# Program Office/Division
# The specific program office or division within the organization
# Examples: "Advanced Development Team", "Systems Engineering", "Research Lab"
INSTALLATION_PROGRAM_OFFICE="Expeditionary Maritime Aviation - Advanced Development Team"

# Installation Prefix
# Short identifier used in namespace generation and system references
# Should be lowercase, alphanumeric, and unique within the organization
INSTALLATION_PREFIX="xma-adt"

# =============================================================================
# NAMESPACE TEMPLATES (Advanced Configuration)
# =============================================================================
# These templates define how URIs are generated for different ontology types.
# The {base_uri} placeholder is replaced with INSTALLATION_BASE_URI above.
# Most users should not need to modify these unless implementing custom
# namespace structures.
# =============================================================================

# Core system ontologies (shared across all projects)
NAMESPACE_CORE_TEMPLATE="{base_uri}/core#{entity}"

# Domain-specific ontologies (e.g., avionics, weapons, communications)
NAMESPACE_DOMAIN_TEMPLATE="{base_uri}/{domain}#{entity}"

# Program-specific core ontologies
NAMESPACE_PROGRAM_TEMPLATE="{base_uri}/{program}/core#{entity}"

# Project-specific ontologies
NAMESPACE_PROJECT_TEMPLATE="{base_uri}/{program}/{project}#{entity}"

# Systems Engineering ontologies
NAMESPACE_SE_TEMPLATE="{base_uri}/se/{se_domain}#{entity}"

# Mission-specific ontologies
NAMESPACE_MISSION_TEMPLATE="{base_uri}/mission/{mission_type}#{entity}"

# Platform-specific ontologies
NAMESPACE_PLATFORM_TEMPLATE="{base_uri}/platform/{platform_type}#{entity}"
