rule "automated-test-execution" {
  description = "Automate test execution in CI/CD pipeline"
  when = "setting up or modifying CI/CD pipeline"
  then = "CONFIGURE: Automated test execution:
    - Run tests on every push and pull request
    - Execute pre-merge validation automatically
    - Run comprehensive test suite on main branch
    - Generate and publish test coverage reports
    - Run security scans automatically
    - Block merges if tests fail
    - Send notifications for test failures
    - Store test artifacts and reports"
}

rule "test-environment-setup" {
  description = "Proper test environment configuration"
  when = "setting up test environments or CI/CD"
  then = "CONFIGURE: Test environment requirements:
    - Use isolated test databases
    - Mock external services and APIs
    - Use test-specific configuration
    - Clean up test data after execution
    - Use in-memory storage for unit tests
    - Set up proper test fixtures
    - Configure test-specific environment variables
    - Ensure reproducible test environments"
}

rule "test-reporting-and-monitoring" {
  description = "Comprehensive test reporting and monitoring"
  when = "setting up test reporting or monitoring"
  then = "IMPLEMENT: Test reporting and monitoring:
    - Generate detailed test reports
    - Track test execution times
    - Monitor test coverage trends
    - Alert on test failures
    - Track flaky tests
    - Generate test metrics dashboards
    - Store test history and trends
    - Provide test result notifications"
}

rule "test-data-management" {
  description = "Proper test data and fixture management"
  when = "managing test data or creating test fixtures"
  then = "IMPLEMENT: Test data management:
    - Use realistic test data
    - Create reusable test fixtures
    - Isolate test data from production
    - Clean up test data after execution
    - Version control test data
    - Use factories for test data generation
    - Mock external data sources
    - Ensure test data consistency"
}

rule "test-performance-monitoring" {
  description = "Monitor test performance and execution times"
  when = "monitoring test performance or optimizing test execution"
  then = "IMPLEMENT: Test performance monitoring:
    - Track test execution times
    - Identify slow tests
    - Monitor test suite duration
    - Optimize test execution order
    - Parallelize test execution where possible
    - Monitor test resource usage
    - Set up test performance alerts
    - Optimize test data setup and teardown"
}

rule "test-maintenance-and-cleanup" {
  description = "Regular test maintenance and cleanup"
  when = "maintaining test suite or cleaning up tests"
  then = "PERFORM: Regular test maintenance:
    - Remove obsolete tests
    - Update outdated test data
    - Refactor duplicate test code
    - Optimize test execution
    - Update test documentation
    - Review test coverage regularly
    - Clean up test artifacts
    - Maintain test environment consistency"
}